subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
y = win_data3$free.sulfur.dioxide
x = win_data3$total.sulfur.dioxide
p4 = ggplot(aes(x = total.sulfur.dioxide, y = free.sulfur.dioxide),
data = win_data3) +
geom_point() +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Free sulfur dioxide (g/dm^3)") +
ggtitle("Total vs free sulfur dioxide",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
grid.arrange(p1, p2, p3, p4, ncol = 2)
## Creating a new variable called Rank.
win_data$Rank =  ifelse(win_data$quality == '3', 'low',
ifelse(win_data$quality == '4', 'low',
ifelse(win_data$quality == '5', 'medium',
ifelse(win_data$quality == '6', 'medium',
ifelse(win_data$quality == '7', 'high',
ifelse(win_data$quality == '8', 'high',
ifelse(win_data$quality == '9', 'high',
ifelse(win_data$quality == '10','high','low'))))))))
## Recalculate with the new variable
## Remove the density > 1.00
win_data1 = win_data[win_data$density < 1.00,]
## Remove extreme values of total sulfur dioxide
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
## Generating bi-variate plots grouping by rank
x = win_data1$alcohol
y = win_data1$density
p1 = ggplot(aes(x = alcohol, y = density),  data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Alcohol %") +
ggtitle("Alcohol % vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data1$residual.sugar
y = win_data1$density
p2 = ggplot(aes(x = residual.sugar, y = density ), data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Residual sugar concentration (g/dm^3)") +
ggtitle(" Residual sugar vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data2$total.sulfur.dioxide
y = win_data2$density
p3 = ggplot(aes(x = total.sulfur.dioxide, y = density), data = win_data2) +
geom_point(aes(colour = Rank),alpha = 1/3,
position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Density (g/cm^3)") +
ggtitle("Total sulfur dioxide vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
y = win_data3$free.sulfur.dioxide
x = win_data3$total.sulfur.dioxide
p4 = ggplot(aes(x = total.sulfur.dioxide, y = free.sulfur.dioxide),
data = win_data3) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Free sulfur dioxide (g/dm^3)") +
ggtitle("Total vs free sulfur dioxide",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
grid.arrange(p1, p2, p3, p4, ncol = 2)
## reprint the plot
p1
## reprint the plot
p2
## reprint the plot
p3
# Multiple Linear Regression model
fit <- lm(density ~ total.sulfur.dioxide + residual.sugar +
alcohol, data=win_data3)
summary(fit) # show the summary of results
#coefficients(fit) # model coefficients
#confint(fit, level=0.95) # CIs for model parameters
#fitted(fit) # predicted values
#residuals(fit) # residuals
#anova(fit) # anova table
#vcov(fit) # covariance matrix for model parameters
#influence(fit) # regression diagnostics
## getting parameters to validate the model
par(mfrow =c(2,2))
plot(fit)
## generating a new variable (predicted density)
intercept =  1.004e+00
coef1 =  5.861e-06
coef2 =  3.233e-04
coef3 = -1.192e-03
win_data3$predict_density = win_data3$total.sulfur.dioxide*(coef1) +
win_data3$residual.sugar*(coef2) +
win_data3$alcohol*(coef3) +intercept
## Generating simple linear regression model
fit2 = lm(predict_density ~ density, data = win_data3)
## Plot the model
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= Rank), alpha = 1/3, position =
position_jitter(h = 0)) +
geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[2], col='blue')+
xlab("Density (g/cm^3)") +
ylab("Predicted density (g/cm^3)")
#coef(fit2)
win_data1 = win_data[win_data$density < 1.00,]
x = win_data1$alcohol
y = win_data1$density
## Function to create a histogram
create_boxplot = function(dat_set, x = quality, y) {
return( ggplot(dat_set, aes(x, y = y) ) +
geom_boxplot() )
}
create_boxplot = function(dat_set, x = quality, y)
## Function to create a histogram
create_boxplot = function(dat_set, x = quality, y) {
return( ggplot(dat_set, aes(x, y = y) ) +
geom_boxplot() )
}
create_boxplot(win_data1, quality, alcohol)
## Function to create a histogram
create_boxplot = function(dat_set, x = 'quality', y) {
return( ggplot(dat_set, aes_string(x, y) ) +
geom_boxplot() )
}
## Function to create a histogram
create_boxplot = function(dat_set, x = 'quality', y) {
return( ggplot(dat_set, aes_string(x, y) ) +
geom_boxplot() )
}
create_boxplot(win_data1, 'quality', 'alcohol')
## Function to create a histogram
create_boxplot = function(dat_set, x = 'quality', y) {
return( ggplot(dat_set, aes_string(x, y) ) +
geom_boxplot() +
ylab() +
xlab() +
ggtitle(paste("x, vs, y")+
theme(plot.title = element_text(size=11, hjust=0.5,
face = "bold")),
axis.title = element_text(size=10, hjust=0.5)))
}
create_boxplot(win_data1, 'quality', 'alcohol')
## Function to create a histogram
create_boxplot = function(dat_set, x = 'quality', y, x_lab, y_lab) {
return( ggplot(dat_set, aes_string(x, y) ) +
geom_boxplot() +
ylab(x_lab) +
xlab(y_lab) +
ggtitle(paste("x, vs, y")+
theme(plot.title = element_text(size=11, hjust=0.5,
face = "bold")),
axis.title = element_text(size=10, hjust=0.5)))
}
create_boxplot(win_data1, 'quality', 'alcohol', 'alcohol %', 'quality')
## Function to create a histogram
create_boxplot = function(dat_set, x = 'quality', y, x_lab, y_lab) {
return( ggplot(data = dat_set, aes_string(x = x, y = y) ) +
geom_boxplot() +
ylab(x_lab) +
xlab(y_lab) +
ggtitle(paste("x, vs, y")) +
theme(plot.title = element_text(size=11, hjust=0.5,
face = "bold"),
axis.title = element_text(size=10, hjust=0.5)))
}
create_boxplot(win_data1, 'quality', 'alcohol', 'quality', 'alcohol %')
## Function to create a histogram
create_boxplot = function(dat_set, x = 'quality', y, x_lab, y_lab) {
return( ggplot(data = dat_set, aes_string(x = x, y = y) ) +
geom_boxplot() +
ylab(x_lab) +
xlab(y_lab) +
ggtitle(paste(x, 'vs', y)) +
theme(plot.title = element_text(size=11, hjust=0.5,
face = "bold"),
axis.title = element_text(size=10, hjust=0.5)))
}
create_boxplot(win_data1, 'quality', 'alcohol', 'quality', 'alcohol %')
create_boxplot(win_data1, 'quality', 'residual.sugar', 'quality', 'Residual sugar concentration (g/dm^3)')
## Generating bi-variate plots after removing the outliers
## Remove the density > 1.00
win_data1 = win_data[win_data$density < 1.00,]
## Remove extreme values of total sulfur dioxide
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
p11 = create_boxplot(win_data1, 'quality', 'density', 'quality', 'Density (g/cm^3)')
p12 = create_boxplot(win_data1, 'quality', 'alcohol', 'quality', 'Alcohol %')
p13 = create_boxplot(win_data1, 'quality', 'residual.sugar', 'quality',
'Residual sugar concentration (g/dm^3)')
p14 = create_boxplot(win_data2, 'quality', 'total.sulfur.dioxide', 'quality',
'Total sulfur dioxide (g/cm^3)')
p15 = create_boxplot(win_data2, 'quality', 'free.sulfur.dioxide', 'quality',
'Free sulfur dioxide (g/cm^3)')
grid.arrange(p11, p12, p13, p14, p15, ncol = 2)
## Function to create a histogram
create_boxplot = function(dat_set, x = 'quality', y, x_lab, y_lab,
unit = 'g/dm^3') {
return( ggplot(data = dat_set, aes_string(x = x, y = y) ) +
geom_boxplot() +
xlab(x_lab) +
ylab(paste(y_lab, unit)) +
ggtitle(paste(x_lab, 'vs', y_lab)) +
theme(plot.title = element_text(size=11, hjust=0.5,
face = "bold"),
axis.title = element_text(size=10, hjust=0.5)))
}
## Generating bi-variate plots after removing the outliers
## Remove the density > 1.00
win_data1 = win_data[win_data$density < 1.00,]
## Remove extreme values of total sulfur dioxide
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
p11 = create_boxplot(win_data1, 'quality', 'density', 'quality', 'Density',
'(g/cm^3)')
p12 = create_boxplot(win_data1, 'quality', 'alcohol', 'quality', 'Alcohol %')
p13 = create_boxplot(win_data1, 'quality', 'residual.sugar', 'quality',
'Residual sugar concentration (g/dm^3)')
p14 = create_boxplot(win_data2, 'quality', 'total.sulfur.dioxide', 'quality',
'Total sulfur dioxide (g/dm^3)')
p15 = create_boxplot(win_data2, 'quality', 'free.sulfur.dioxide', 'quality',
'Free sulfur dioxide (g/dm^3)')
grid.arrange(p11, p12, p13, p14, p15, ncol = 2)
## Generating bi-variate plots after removing the outliers
## Remove the density > 1.00
win_data1 = win_data[win_data$density < 1.00,]
## Remove extreme values of total sulfur dioxide
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
p11 = create_boxplot(win_data1, 'quality', 'density', 'Quality', 'Density',
'(g/cm^3)')
p12 = create_boxplot(win_data1, 'quality', 'alcohol', 'Quality', 'Alcohol %')
p13 = create_boxplot(win_data1, 'quality', 'residual.sugar', 'Quality',
'Residual sugar concentration (g/dm^3)')
p14 = create_boxplot(win_data2, 'quality', 'total.sulfur.dioxide', 'Quality',
'Total sulfur dioxide (g/dm^3)')
p15 = create_boxplot(win_data2, 'quality', 'free.sulfur.dioxide', 'Quality',
'Free sulfur dioxide (g/dm^3)')
grid.arrange(p11, p12, p13, p14, p15, ncol = 2)
## Generating bi-variate plots after removing the outliers
## Remove the density > 1.00
win_data1 = win_data[win_data$density < 1.00,]
## Remove extreme values of total sulfur dioxide
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
p11 = create_boxplot(win_data1, 'quality', 'density', 'Quality', 'Density',
'(g/cm^3)')
p12 = create_boxplot(win_data1, 'quality', 'alcohol', 'Quality', 'Alcohol %', '')
p13 = create_boxplot(win_data1, 'quality', 'residual.sugar', 'Quality',
'Residual sugar concentration (g/dm^3)')
p14 = create_boxplot(win_data2, 'quality', 'total.sulfur.dioxide', 'Quality',
'Total sulfur dioxide (g/dm^3)')
p15 = create_boxplot(win_data2, 'quality', 'free.sulfur.dioxide', 'Quality',
'Free sulfur dioxide (g/dm^3)')
grid.arrange(p11, p12, p13, p14, p15, ncol = 2)
## Generating bi-variate plots after removing the outliers
## Remove the density > 1.00
win_data1 = win_data[win_data$density < 1.00,]
## Remove extreme values of total sulfur dioxide
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
p11 = create_boxplot(win_data1, 'quality', 'density', 'Quality', 'Density',
'(g/cm^3)')
p12 = create_boxplot(win_data1, 'quality', 'alcohol', 'Quality', 'Alcohol %', '')
p13 = create_boxplot(win_data1, 'quality', 'residual.sugar', 'Quality',
'Residual sugar concentration')
p14 = create_boxplot(win_data2, 'quality', 'total.sulfur.dioxide', 'Quality',
'Total sulfur dioxide')
p15 = create_boxplot(win_data2, 'quality', 'free.sulfur.dioxide', 'Quality',
'Free sulfur dioxide')
grid.arrange(p11, p12, p13, p14, p15, ncol = 2)
## Call function to create a histogram
win_data_x = win_data[win_data$residual.sugar < 30,]
create_histogram(win_data_x, "residual.sugar", 1)
win_data_y = win_data[win_data$free.sulfur.dioxide < 200,]
free.sulfur.dioxide_no_outliers = win_data_x$free.sulfur.dioxide
## Call function to create a histogram
create_histogram(win_data_x , "free.sulfur.dioxide", 6)
win_data_y = win_data[win_data$free.sulfur.dioxide < 200,]
## Call function to create a histogram
create_histogram(win_data_y , "free.sulfur.dioxide", 6)
win_data_z = win_data[win_data$density < 1.00,]
density_no_outliers = win_data_x$density
## Call function to create a histogram
create_histogram(win_data_z , "density", 0.001)
## Generating bi-variate plots after removing the outliers
win_data_w = win_data1[win_data1$total.sulfur.dioxide < 300,]
p11 = create_boxplot(win_data_z, 'quality', 'density', 'Quality', 'Density',
'(g/cm^3)')
p12 = create_boxplot(win_data1, 'quality', 'alcohol', 'Quality', 'Alcohol %', '')
p13 = create_boxplot(win_data_x, 'quality', 'residual.sugar', 'Quality',
'Residual sugar concentration')
p14 = create_boxplot(win_data_w, 'quality', 'total.sulfur.dioxide', 'Quality',
'Total sulfur dioxide')
p15 = create_boxplot(win_data_y, 'quality', 'free.sulfur.dioxide', 'Quality',
'Free sulfur dioxide')
grid.arrange(p11, p12, p13, p14, p15, ncol = 2)
## Creating a new variable called Rank.
win_data$Rank =  ifelse(win_data$quality == '3', 'low',
ifelse(win_data$quality == '4', 'low',
ifelse(win_data$quality == '5', 'medium',
ifelse(win_data$quality == '6', 'medium',
ifelse(win_data$quality == '7', 'high',
ifelse(win_data$quality == '8', 'high',
ifelse(win_data$quality == '9', 'high',
ifelse(win_data$quality == '10','high','low'))))))))
## Recalculate with the new variable
## Remove the density > 1.00
win_data1 = win_data[win_data$density < 1.00,]
## Remove extreme values of total sulfur dioxide
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 300,]
## Generating bi-variate plots grouping by rank
x = win_data1$alcohol
y = win_data1$density
p1 = ggplot(aes(x = alcohol, y = density),  data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Alcohol %") +
ggtitle("Alcohol % vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data1$residual.sugar
y = win_data1$density
p2 = ggplot(aes(x = residual.sugar, y = density ), data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Residual sugar concentration (g/dm^3)") +
ggtitle(" Residual sugar vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data2$total.sulfur.dioxide
y = win_data2$density
p3 = ggplot(aes(x = total.sulfur.dioxide, y = density), data = win_data2) +
geom_point(aes(colour = Rank),alpha = 1/3,
position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Density (g/cm^3)") +
ggtitle("Total sulfur dioxide vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
y = win_data3$free.sulfur.dioxide
x = win_data3$total.sulfur.dioxide
p4 = ggplot(aes(x = total.sulfur.dioxide, y = free.sulfur.dioxide),
data = win_data3) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Free sulfur dioxide (g/dm^3)") +
ggtitle("Total vs free sulfur dioxide",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
grid.arrange(p1, p2, p3, p4, ncol = 2)
create_scatter = function(dat_set, x, y, x_lab, y_lab,
unit = 'g/dm^3') {
return( ggplot(data = dat_set, aes_string(x = x, y = y) ) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0))+
xlab(x_lab) +
ylab(paste(y_lab, unit)) +
ggtitle(paste(x_lab, 'vs', y_lab),
subtitle = paste("R^2 = ",
round(cor(x,y), digits = 2))) +
theme(plot.title = element_text(size=11, hjust=0.5,
face = "bold"),
axis.title = element_text(size=10, hjust=0.5)))
}
create_scatter = function(dat_set, x, y, x_lab, y_lab,
unit = 'g/dm^3') {
return( ggplot(data = dat_set, aes_string(x = x, y = y) ) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0))+
xlab(x_lab) +
ylab(paste(y_lab, unit)) +
ggtitle(paste(x_lab, 'vs', y_lab),
subtitle = paste("R^2 = ",
round(cor(x,y), digits = 2))) +
theme(plot.title = element_text(size=11, hjust=0.5,
face = "bold"),
axis.title = element_text(size=10, hjust=0.5)))
}
create_scatter(win_data1, 'alcohol', 'density', 'Alcohol', 'Density',
'(g/cm^3)')
create_scatter = function(dat_set, x, y, x_lab, y_lab,
unit = 'g/dm^3') {
return( ggplot(data = dat_set, aes(x = x, y = y) ) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0))+
xlab(x_lab) +
ylab(paste(y_lab, unit)) +
ggtitle(paste(x_lab, 'vs', y_lab),
subtitle = paste("R^2 = ",
round(cor(x,y), digits = 2))) +
theme(plot.title = element_text(size=11, hjust=0.5,
face = "bold"),
axis.title = element_text(size=10, hjust=0.5)))
}
create_scatter(win_data1, alcohol, density, 'Alcohol', 'Density',
'(g/cm^3)')
create_scatter(win_data1, x, y, 'Alcohol', 'Density',
'(g/cm^3)')
create_scatter = function(dat_set, x, y, x_lab, y_lab,
unit = 'g/dm^3') {
return( ggplot(data = dat_set, aes(x = x, y = y)) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0))
)
}
create_scatter(win_data1, x, y, 'Alcohol', 'Density',
'(g/cm^3)')
create_scatter(win_data1, alcohol, density, 'Alcohol', 'Density',
'(g/cm^3)')
## Creating a new variable called Rank.
win_data$Rank =  ifelse(win_data$quality == '3', 'low',
ifelse(win_data$quality == '4', 'low',
ifelse(win_data$quality == '5', 'medium',
ifelse(win_data$quality == '6', 'medium',
ifelse(win_data$quality == '7', 'high',
ifelse(win_data$quality == '8', 'high',
ifelse(win_data$quality == '9', 'high',
ifelse(win_data$quality == '10','high','low'))))))))
## Recalculate with the new variable
## Remove the density > 1.00
win_data1 = win_data[win_data$density < 1.00,]
## Remove extreme values of total sulfur dioxide
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 300,]
## Generating multi-variate plots grouping by rank
x = win_data1$alcohol
y = win_data1$density
p1 = ggplot(aes(x = alcohol, y = density),  data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Alcohol %") +
ggtitle("Alcohol % vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data1$residual.sugar
y = win_data1$density
p2 = ggplot(aes(x = residual.sugar, y = density ), data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Residual sugar concentration (g/dm^3)") +
ggtitle(" Residual sugar vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data2$total.sulfur.dioxide
y = win_data2$density
p3 = ggplot(aes(x = total.sulfur.dioxide, y = density), data = win_data2) +
geom_point(aes(colour = Rank),alpha = 1/3,
position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Density (g/cm^3)") +
ggtitle("Total sulfur dioxide vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
y = win_data3$free.sulfur.dioxide
x = win_data3$total.sulfur.dioxide
p4 = ggplot(aes(x = total.sulfur.dioxide, y = free.sulfur.dioxide),
data = win_data3) +
geom_point(aes(colour = Rank), alpha = 1/3,
position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Free sulfur dioxide (g/dm^3)") +
ggtitle("Total vs free sulfur dioxide",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
grid.arrange(p1, p2, p3, p4, ncol = 2)
## Generating bi-variate plots after removing the outliers
win_data_w = win_data[win_data$total.sulfur.dioxide < 300,]
p11 = create_boxplot(win_data_z, 'quality', 'density', 'Quality', 'Density',
'(g/cm^3)')
p12 = create_boxplot(win_data1, 'quality', 'alcohol', 'Quality', 'Alcohol %', '')
p13 = create_boxplot(win_data_x, 'quality', 'residual.sugar', 'Quality',
'Residual sugar concentration')
p14 = create_boxplot(win_data_w, 'quality', 'total.sulfur.dioxide', 'Quality',
'Total sulfur dioxide')
p15 = create_boxplot(win_data_y, 'quality', 'free.sulfur.dioxide', 'Quality',
'Free sulfur dioxide')
grid.arrange(p11, p12, p13, p14, p15, ncol = 2)
