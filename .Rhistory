summary(win_data[2:12])
p1 = ggplot(aes(x = fixed.acidity), data = win_data) +
geom_histogram(bins = 35, binwidth = .25, color = 'black',
fill = '#F79420')
p2 = ggplot(aes(x = volatile.acidity), data = win_data) +
geom_histogram(bins = 35, binwidth = .05, color = 'black',
fill = '#F79420')
p3 = ggplot(aes(x = citric.acid), data = win_data) +
geom_histogram(bins = 35, binwidth = .05, color = 'black',
fill = '#F79420')
p4 = ggplot(aes(x = residual.sugar), data = win_data) +
geom_histogram(bins = 35, binwidth = 1, color = 'black',
fill = '#F79420')
p5 = ggplot(aes(x = chlorides), data = win_data) +
geom_histogram(bins = 35, binwidth = .0025, color = 'black',
fill = '#F79420')
p6 = ggplot(aes(x = free.sulfur.dioxide), data = win_data) +
geom_histogram(bins = 35, binwidth = 6, color = 'black',
fill = '#F79420')
p7 =  ggplot(aes(x = total.sulfur.dioxide), data = win_data) +
geom_histogram(bins = 35, binwidth = 8, color = 'black',
fill = '#F79420')
p8 = ggplot(aes(x = density), data = win_data) +
geom_histogram(bins = 35, binwidth = .001, color = 'black',
fill = '#F79420')
p9 =  ggplot(aes(x = pH), data = win_data) +
geom_histogram(bins = 35, binwidth = .05, color = 'black',
fill = '#F79420')
p10 = ggplot(aes(x = sulphates), data = win_data) +
geom_histogram(bins = 35, binwidth = .02, color = 'black',
fill = '#F79420')
p11 = ggplot(aes(x = alcohol), data = win_data) +
geom_histogram(bins = 35, binwidth = .25, color = 'black',
fill = '#F79420')
p12 = ggplot(aes(x = quality), data = win_data) +
geom_histogram(bins = 35, binwidth = .25, color = 'black',
fill = '#F79420')
grid.arrange(p1, p2, p3,p4, p5, p6, p7, p8, p9, p10, p11, p12, ncol = 3)
p1 = ggplot(aes(x = fixed.acidity), data = win_data) +
geom_histogram(bins = 35, binwidth = .25, color = 'black',
fill = '#F79420')
p2 = ggplot(aes(x = volatile.acidity), data = win_data) +
geom_histogram(bins = 35, binwidth = .05, color = 'black',
fill = '#F79420')
p3 = ggplot(aes(x = citric.acid), data = win_data) +
geom_histogram(bins = 35, binwidth = .05, color = 'black',
fill = '#F79420')
p4 = ggplot(aes(x = residual.sugar), data = win_data) +
geom_histogram(bins = 35, binwidth = 1, color = 'black',
fill = '#F79420')
p5 = ggplot(aes(x = chlorides), data = win_data) +
geom_histogram(bins = 35, binwidth = .005, color = 'black',
fill = '#F79420')
p6 = ggplot(aes(x = free.sulfur.dioxide), data = win_data) +
geom_histogram(bins = 35, binwidth = 6, color = 'black',
fill = '#F79420')
p7 =  ggplot(aes(x = total.sulfur.dioxide), data = win_data) +
geom_histogram(bins = 35, binwidth = 8, color = 'black',
fill = '#F79420')
p8 = ggplot(aes(x = density), data = win_data) +
geom_histogram(bins = 35, binwidth = .001, color = 'black',
fill = '#F79420')
p9 =  ggplot(aes(x = pH), data = win_data) +
geom_histogram(bins = 35, binwidth = .05, color = 'black',
fill = '#F79420')
p10 = ggplot(aes(x = sulphates), data = win_data) +
geom_histogram(bins = 35, binwidth = .02, color = 'black',
fill = '#F79420')
p11 = ggplot(aes(x = alcohol), data = win_data) +
geom_histogram(bins = 35, binwidth = .25, color = 'black',
fill = '#F79420')
p12 = ggplot(aes(x = quality), data = win_data) +
geom_histogram(bins = 35, binwidth = .25, color = 'black',
fill = '#F79420')
grid.arrange(p1, p2, p3,p4, p5, p6, p7, p8, p9, p10, p11, p12, ncol = 3)
p1 = ggplot(aes(x = fixed.acidity), data = win_data) +
geom_histogram(bins = 35, binwidth = .25, color = 'black',
fill = '#F79420')
p2 = ggplot(aes(x = volatile.acidity), data = win_data) +
geom_histogram(bins = 35, binwidth = .05, color = 'black',
fill = '#F79420')
p3 = ggplot(aes(x = citric.acid), data = win_data) +
geom_histogram(bins = 35, binwidth = .05, color = 'black',
fill = '#F79420')
p4 = ggplot(aes(x = residual.sugar), data = win_data) +
geom_histogram(bins = 35, binwidth = 1, color = 'black',
fill = '#F79420')
p5 = ggplot(aes(x = chlorides), data = win_data) +
geom_histogram(bins = 35, binwidth = .007, color = 'black',
fill = '#F79420')
p6 = ggplot(aes(x = free.sulfur.dioxide), data = win_data) +
geom_histogram(bins = 35, binwidth = 6, color = 'black',
fill = '#F79420')
p7 =  ggplot(aes(x = total.sulfur.dioxide), data = win_data) +
geom_histogram(bins = 35, binwidth = 8, color = 'black',
fill = '#F79420')
p8 = ggplot(aes(x = density), data = win_data) +
geom_histogram(bins = 35, binwidth = .001, color = 'black',
fill = '#F79420')
p9 =  ggplot(aes(x = pH), data = win_data) +
geom_histogram(bins = 35, binwidth = .05, color = 'black',
fill = '#F79420')
p10 = ggplot(aes(x = sulphates), data = win_data) +
geom_histogram(bins = 35, binwidth = .02, color = 'black',
fill = '#F79420')
p11 = ggplot(aes(x = alcohol), data = win_data) +
geom_histogram(bins = 35, binwidth = .25, color = 'black',
fill = '#F79420')
p12 = ggplot(aes(x = quality), data = win_data) +
geom_histogram(bins = 35, binwidth = .25, color = 'black',
fill = '#F79420')
grid.arrange(p1, p2, p3,p4, p5, p6, p7, p8, p9, p10, p11, p12, ncol = 3)
p12 = ggplot(aes(x = quality), data = win_data) +
geom_bar(color = 'black',
fill = '#F79420')
grid.arrange(p1, p2, p3,p4, p5, p6, p7, p8, p9, p10, p11, p12, ncol = 3)
scatterplotMatrix(win_dat[2:12],diagonal="histogram",smooth=FALSE)
scatterplotMatrix(win_dat[2:12],diagonal="histogram",smooth=FALSE)
library(PerformanceAnalytics)
plotmatrix(win_dat[2:12])
ggpairs(win_dat[2:12], aes(colour = Species, alpha = 0.4))
library(GGally)
install.packages('GGally', dependancies = T)
install.packages('GGally', dependencies = T)
## Installing required packages
# install.packages("ggplot2", dependencies = T)
# install.packages("knitr", dependencies = T)
# install.packages("dplyr", dependencies = T)
#install.packages('GGally', dependencies = T)
## Load required packages
library(ggplot2)
library(knitr)
library(dplyr)
library(gridExtra)
library(GGally)
ggpairs(win_dat[2:12], aes(colour = Species, alpha = 0.4))
ggpairs(win_data[2:12], aes(colour = Species, alpha = 0.4))
ggpairs(win_data[2:12])
ggpairs(win_data[2:13])
library(GGally)
ggpairs(win_data[2:13], aes(colour = quality, alpha = 0.4))
win_data[, 'quality'] <- as.factor(win_data[, 'quality'])
summary(win_data[2:12])
summary(win_data[2:13])
ggpairs(win_data[2:13], aes(colour = quality, alpha = 0.4))
ggpairs(win_data[2:13], aes(alpha = 0.1))
+geom_smooth(method="lm",se=FALSE)
ggpairs(win_data[2:12], aes(alpha = 0.1))
+geom_smooth(method="lm",se=FALSE)
ggpairs(win_data[2:12], aes(alpha = 0.1))
+geom_smooth()
ggpairs(win_data[2:12])
+geom_smooth(method="lm",se=FALSE)
ggpairs(win_data[2:12], aes(alpha = 0.1))
ggpairs(win_data[2:12], aes(alpha = 0.01))
ggpairs(win_data[2:12], aes(alpha = 0.01)) + geom_point(size = 2)
ggpairs(win_data[2:12], aes(alpha = 0.01)) + geom_point(size = 2)
getwd()
setwd("E:/OneDrive_gmail/OneDrive/Dropbox_transfers/Udacity/Nano_Degree_Data_analysis/Project_6_R_programing/R_final_project/Udasity_R_Final_project")
library(ggplot2)
library(knitr)
library(dplyr)
library(gridExtra)
library(GGally)
win_data =  read.csv('wineQualityWhites.csv', sep = ',')
names(win_data)
dim(win_data)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0))
library(ggplot2)
library(knitr)
library(dplyr)
library(gridExtra)
library(GGally)
# Load the Data
#getwd()
#list.files()
win_data =  read.csv('wineQualityWhites.csv', sep = ',')
names(win_data)
win_data1 = win_data[win_data$density < 1.00,]
x = win_data1$alcohol
y = win_data1$density
p1 = ggplot(aes(x = alcohol, y = density ), data = win_data1) +
geom_point()+
ylab("Density (g/cm^3)") +
xlab("Alcohol %") +
ggtitle("Alcohol % vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data1$residual.sugar
y = win_data1$density
p2 = ggplot(aes(x = residual.sugar, y = density ), data = win_data1) +
geom_point()+
ylab("Density (g/cm^3)") +
xlab("Residual sugar concentration (g/dm^3)") +
ggtitle(" Residual sugar vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
x = win_data2$total.sulfur.dioxide
y = win_data2$density
p3 = ggplot(aes(x = total.sulfur.dioxide, y = density), data = win_data2) +
geom_point() +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Density (g/cm^3)") +
ggtitle("Total sulfur dioxide vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
y = win_data3$free.sulfur.dioxide
x = win_data3$total.sulfur.dioxide
p4 = ggplot(aes(x = total.sulfur.dioxide, y = free.sulfur.dioxide), data = win_data3) +
geom_point() +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Free sulfur dioxide (g/dm^3)") +
ggtitle("Total vs free sulfur dioxide",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
grid.arrange(p1, p2, p3, p4, ncol = 2)
win_data$Rank =  ifelse(win_data$quality == '3', 'low',
ifelse(win_data$quality == '4', 'low',
ifelse(win_data$quality == '5', 'medium',
ifelse(win_data$quality == '6', 'medium',
ifelse(win_data$quality == '7', 'high',
ifelse(win_data$quality == '8', 'high',
ifelse(win_data$quality == '9', 'high',
ifelse(win_data$quality == '10','high','low'))))))))
win_data1 = win_data[win_data$density < 1.00,]
x = win_data1$alcohol
y = win_data1$density
p1 = ggplot(aes(x = alcohol, y = density),  data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3, position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Alcohol %") +
ggtitle("Alcohol % vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data1$residual.sugar
y = win_data1$density
p2 = ggplot(aes(x = residual.sugar, y = density ), data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3, position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Residual sugar concentration (g/dm^3)") +
ggtitle(" Residual sugar vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
x = win_data2$total.sulfur.dioxide
y = win_data2$density
p3 = ggplot(aes(x = total.sulfur.dioxide, y = density), data = win_data2) +
geom_point(aes(colour = Rank),alpha = 1/3, position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Density (g/cm^3)") +
ggtitle("Total sulfur dioxide vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
y = win_data3$free.sulfur.dioxide
x = win_data3$total.sulfur.dioxide
p4 = ggplot(aes(x = total.sulfur.dioxide, y = free.sulfur.dioxide), data = win_data3) +
geom_point(aes(colour = Rank), alpha = 1/3, position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Free sulfur dioxide (g/dm^3)") +
ggtitle("Total vs free sulfur dioxide",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
grid.arrange(p1, p2, p3, p4, ncol = 2)
# Multiple Linear Regression
fit <- lm(density ~ total.sulfur.dioxide + residual.sugar + alcohol, data=win_data3)
summary(fit) # show the summary of results
#coefficients(fit) # model coefficients
#confint(fit, level=0.95) # CIs for model parameters
#fitted(fit) # predicted values
#residuals(fit) # residuals
#anova(fit) # anova table
#vcov(fit) # covariance matrix for model parameters
#influence(fit) # regression diagnostics
par(mfrow =c(2,2))
plot(fit)
## generating a new variable (predicted density)
intercept =  1.004e+00
coef1 =  5.861e-06
coef2 =  3.233e-04
coef3 = -1.192e-03
win_data3$predict_density = win_data3$total.sulfur.dioxide*(coef1) +
win_data3$residual.sugar*(coef2) +
win_data3$alcohol*(coef3) +intercept
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0))
fit2 = lm(density~predict_density, data = win_data3)
abline(coef(fit2)[1:2])
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_abline(fit2)
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_abline(fit2[1:2])
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_line(fit2[1:2])
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_line(aes(fit2[1:2]))
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_line(aes(fit2[1:2], density)
#abline(coef(fit2)[1:2])
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_line(aes(fit2[1:2], density))
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_line(aes(predict_density, density))
#abline(coef(fit2)[1:2])
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_line(x=density, y=coef(fit2)[1]+coef(fit2)[2]*density)
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[2], col='red')
#abline(coef(fit2)[1:2])
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[2], col='blue')
#abline(coef(fit2)[1:2])
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[2], col='blue')
#abline(coef(fit2)[1:2])
fit2 = lm(density~predict_density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[2], col='blue')
coef(fit2)
coef(fit)
fit2 = lm(predict_density ~ density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position = position_jitter(h = 0)) +
geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[2], col='blue')
coef(fit)
coef(fit2)
fit2 = lm(predict_density ~ density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= win_data3$Rank), alpha = 1/3, position =
position_jitter(h = 0)) +
geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[2], col='blue') +
xlab("Density (g/cm^3)") +
ylab("Predicted density (g/cm^3)")
fit2 = lm(predict_density ~ density, data = win_data3)
ggplot(aes(density , predict_density), data = win_data3) +
geom_point(aes(color= Rank), alpha = 1/3, position =
position_jitter(h = 0)) +
geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[2], col='blue') +
xlab("Density (g/cm^3)") +
ylab("Predicted density (g/cm^3)")
setwd("E:/OneDrive_gmail/OneDrive/Dropbox_transfers/Udacity/Nano_Degree_Data_analysis/Project_6_R_programing/R_final_project/Udasity_R_Final_project")
# Multiple Linear Regression
fit <- lm(density ~  residual.sugar + alcohol, data=win_data3)
summary(fit) # show the summary of results
#coefficients(fit) # model coefficients
#confint(fit, level=0.95) # CIs for model parameters
#fitted(fit) # predicted values
#residuals(fit) # residuals
#anova(fit) # anova table
#vcov(fit) # covariance matrix for model parameters
#influence(fit) # regression diagnostics
# Multiple Linear Regression
fit <- lm(density ~ total.sulfur.dioxide + residual.sugar + alcohol, data=win_data3)
summary(fit) # show the summary of results
#coefficients(fit) # model coefficients
#confint(fit, level=0.95) # CIs for model parameters
#fitted(fit) # predicted values
#residuals(fit) # residuals
#anova(fit) # anova table
#vcov(fit) # covariance matrix for model parameters
#influence(fit) # regression diagnostics
## Generating bi-variate plots grouping by rank
x = win_data1$alcohol
y = win_data1$density
p1 = ggplot(aes(x = alcohol, y = density),  data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3, position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Alcohol %") +
ggtitle("Alcohol % vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data1$residual.sugar
y = win_data1$density
p2 = ggplot(aes(x = residual.sugar, y = density ), data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3, position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Residual sugar concentration (g/dm^3)") +
ggtitle(" Residual sugar vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data2$total.sulfur.dioxide
y = win_data2$density
p3 = ggplot(aes(x = total.sulfur.dioxide, y = density), data = win_data2) +
geom_point(aes(colour = Rank),alpha = 1/3, position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Density (g/cm^3)") +
ggtitle("Total sulfur dioxide vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
y = win_data3$free.sulfur.dioxide
x = win_data3$total.sulfur.dioxide
p4 = ggplot(aes(x = total.sulfur.dioxide, y = free.sulfur.dioxide), data = win_data3) +
geom_point(aes(colour = Rank), alpha = 1/3, position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Free sulfur dioxide (g/dm^3)") +
ggtitle("Total vs free sulfur dioxide",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
grid.arrange(p1, p2, p3, p4, ncol = 2)
setwd("E:/OneDrive_gmail/OneDrive/Dropbox_transfers/Udacity/Nano_Degree_Data_analysis/Project_6_R_programing/R_final_project/Udasity_R_Final_project")
coef(fit2)
## Creating a new variable called Rank.
win_data$Rank =  ifelse(win_data$quality == '3', 'low',
ifelse(win_data$quality == '4', 'low',
ifelse(win_data$quality == '5', 'medium',
ifelse(win_data$quality == '6', 'medium',
ifelse(win_data$quality == '7', 'high',
ifelse(win_data$quality == '8', 'high',
ifelse(win_data$quality == '9', 'high',
ifelse(win_data$quality == '10','high','low'))))))))
## Remove the density > 1.00
win_data1 = win_data[win_data$density < 1.00,]
## Remove extreme values of total sulfur dioxide
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
## Creating a new variable called Rank.
win_data$Rank =  ifelse(win_data$quality == '3', 'low',
ifelse(win_data$quality == '4', 'low',
ifelse(win_data$quality == '5', 'medium',
ifelse(win_data$quality == '6', 'medium',
ifelse(win_data$quality == '7', 'high',
ifelse(win_data$quality == '8', 'high',
ifelse(win_data$quality == '9', 'high',
ifelse(win_data$quality == '10','high','low'))))))))
## Recalculate with the new variable
## Remove the density > 1.00
win_data1 = win_data[win_data$density < 1.00,]
## Remove extreme values of total sulfur dioxide
win_data2 = win_data1[win_data1$total.sulfur.dioxide < 300,]
## Remove extreme values of free sulfur dioxide
win_data3 = win_data2[win_data2$free.sulfur.dioxide < 200,]
## Generating bi-variate plots grouping by rank
x = win_data1$alcohol
y = win_data1$density
p1 = ggplot(aes(x = alcohol, y = density),  data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3, position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Alcohol %") +
ggtitle("Alcohol % vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data1$residual.sugar
y = win_data1$density
p2 = ggplot(aes(x = residual.sugar, y = density ), data = win_data1) +
geom_point(aes(colour = Rank), alpha = 1/3, position = position_jitter(h = 0))+
ylab("Density (g/cm^3)") +
xlab("Residual sugar concentration (g/dm^3)") +
ggtitle(" Residual sugar vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
x = win_data2$total.sulfur.dioxide
y = win_data2$density
p3 = ggplot(aes(x = total.sulfur.dioxide, y = density), data = win_data2) +
geom_point(aes(colour = Rank),alpha = 1/3, position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Density (g/cm^3)") +
ggtitle("Total sulfur dioxide vs density",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
y = win_data3$free.sulfur.dioxide
x = win_data3$total.sulfur.dioxide
p4 = ggplot(aes(x = total.sulfur.dioxide, y = free.sulfur.dioxide), data = win_data3) +
geom_point(aes(colour = Rank), alpha = 1/3, position = position_jitter(h = 0)) +
xlab("Total sulfur dioxide (g/dm^3)") +
ylab("Free sulfur dioxide (g/dm^3)") +
ggtitle("Total vs free sulfur dioxide",
subtitle = paste("R^2 = ", round(cor(x,y), digits = 2)))+
theme(plot.title = element_text(size=11, hjust=0.5, face = "bold"),
axis.title = element_text(size=10, hjust=0.5))
grid.arrange(p1, p2, p3, p4, ncol = 2)
